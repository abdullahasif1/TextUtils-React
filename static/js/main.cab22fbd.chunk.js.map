{"version":3,"sources":["components/Alert.js","components/NavBar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","NavBar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","backgroundColor","onChange","event","console","log","target","rows","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","split","join","length","prototypes","PropTypes","string","isRequired","dropdown","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","setInterval","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.cab22fbd.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Alert(props) {\n    const capitalize = (word)=>{\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n\n\n  return (\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n        <strong>{capitalize(props.alert.type)} </strong> {props.alert.msg}   \n    </div>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n//import { Link } from 'react-router-dom'\n\n\nexport default function NavBar(props) {\n  return (\n    \n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n            <div className=\"container-fluid\">\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n                        </li>\n          {/*<li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/about\">About</a>\n          </li>\n          */}\n                    </ul>\n        {/*<form className=\"d-flex\" role=\"search\">\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n        </form>*/}\n                <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n                    <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\"  id=\"flexSwitchCheckDefault\"/>\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark mode</label>\n                </div>\n                </div>\n            </div>\n        </nav>   \n    \n  )\n}\n\n\nNavBar.prototypes = {\n    title: PropTypes.string.isRequired,\n    dropdown: PropTypes.string.isRequired\n}\n\nNavBar.defaultProps = {\n    title: 'Set title here',\n    dropdown: 'About text here'\n};","import React, {useState} from 'react'\n//import PropTypes from 'prop-types'\n\n\nexport default function TextForm(props) {\n    const handleLoClick = () => {\n        console.log(\"lowercase was clicked\");\n        let newText = text.toLowerCase();\n        setText(newText)\n        props.showAlert(\"Converted to Lower Case\", \"Success\");\n    }\n    const handleUpClick = ()=>{\n        console.log(\"Uppercase was clicked\" + text);\n        let newText = text.toUpperCase();\n        setText(newText)\n        props.showAlert(\"Converted to Upper Case\", \"Success\");\n    } \n  \n    const handleOnChange = (event)=>{\n        console.log(\"On change\");\n        setText(event.target.value);    \n    }\n\n    const handleExtraSpaces = () => {\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"))\n    }\n\n    const handleCopy = () => {\n        var text = document.getElementById(\"myBox\");\n        text.select();\n        navigator.clipboard.writeText(text.value);\n    }\n\n\n    const [text, setText] = useState('');\n    //text = \"next text\"     wrong way to change the state\n    //setText(\"new text\")     correct way to change the state  \n  \n  \n    return (\n        <>\n    <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\n        <h1>{props.heading}</h1>\n        <div className=\"mb-3\">\n            <textarea className=\"form-control\" value={text} style={{backgroundColor: props.mode==='dark'?'grey':'white', color:props.mode==='dark'?'white':'black'}} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\n        </div>\n        <button className= \"btn btn-primary mx-2\"  onClick={handleUpClick}>Conversion to Upper case</button>\n        <button className= \"btn btn-primary mx-2\" onClick={handleLoClick}> Convert to Lowercase</button>\n        <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\n        <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove extra spaces</button>\n    </div>\n    <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\n        <h1>Your text summary</h1>\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\n        <p>{0.008* text.split(\" \").length} Minutes to read</p>\n        <h2>Preview</h2>\n        <p>{text.length>0?text:\"Enter something in the textbox above to preview it\"}</p>\n    </div>\n    </>\n  )\n}\n","import React, { useState } from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\n//import About from './components/About';\nimport NavBar from './components/NavBar';\nimport TextForm from './components/TextForm';\n//import {BrowserRouter as Router, Routes, Route} from \"react-router-dom\"\n\nfunction App() {\n  \n  const [mode, setMode] = useState('light');   \n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg:message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'grey';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Dark Mode';\n      setInterval(() => {\n        document.title= 'Textutils is Amzaing Mode';\n      }, 2000);\n      setInterval(() => {\n        document.title= 'Install Textutils Now';\n      }, 1500);\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  }\n  \n  return (\n\n    ///JSX Fragment\n  <>   \n      {/*<Router>*/}\n      <NavBar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n       \n\n\n     {/*<Routes>\n          <Route exact path=\"/about\" element={<About/>}/>\n          <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter the text to moniter changes\" mode={mode}/>}/>\n  </Routes>*/}\n      <TextForm showAlert={showAlert} heading=\"Enter the text to moniter changes\" mode={mode}/>\n\n      {/* <About/>  */}\n      </div>\n      {/*</Router>*/}\n       \n \n  </>\n  );\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}